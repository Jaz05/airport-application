definitions:
  controller.paymentRequestBody:
    properties:
      card_number:
        type: integer
      expiration_date:
        type: string
      security_number:
        type: integer
      token:
        type: string
    type: object
  controller.seatResponse:
    properties:
      id:
        type: integer
      position:
        type: string
      price:
        type: number
    type: object
  dto.SaleRequestBody:
    properties:
      dni:
        type: integer
      name:
        type: string
      seat_id:
        type: integer
      surname:
        type: string
    type: object
  dto.SaleResponseBody:
    properties:
      id:
        type: integer
      passenger:
        $ref: '#/definitions/model.Passenger'
      price:
        type: number
      reservation_date:
        type: string
      seat_id:
        type: integer
    type: object
  dto.SalesRequestBody:
    properties:
      sales:
        items:
          $ref: '#/definitions/dto.SaleRequestBody'
        type: array
    type: object
  dto.SalesResponseBody:
    properties:
      sales:
        items:
          $ref: '#/definitions/dto.SaleResponseBody'
        type: array
      token:
        type: string
    type: object
  model.Airport:
    properties:
      id:
        type: integer
      name:
        type: string
      place:
        $ref: '#/definitions/model.Place'
      placeID:
        type: integer
      status:
        type: string
    type: object
  model.Flight:
    properties:
      basePrice:
        type: number
      capacity:
        type: integer
      date:
        type: string
      destination:
        $ref: '#/definitions/model.Airport'
      destinationID:
        type: integer
      id:
        type: integer
      origin:
        $ref: '#/definitions/model.Airport'
      originID:
        type: integer
    type: object
  model.Passenger:
    properties:
      dni:
        type: integer
      id:
        type: integer
      name:
        type: string
      surName:
        type: string
    type: object
  model.Place:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Airport Rest API
  title: Airport Application
  version: "1.0"
paths:
  /flights:
    get:
      parameters:
      - description: Flight destination ID
        in: query
        name: destination
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Flight'
            type: array
      summary: Get Flights
      tags:
      - Flights
  /payment:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.paymentRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: ""
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Creates a payment
      tags:
      - Payments
  /sales:
    get:
      parameters:
      - description: Sale Token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SalesResponseBody'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Sales by Token
      tags:
      - Sales
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.SalesRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SalesResponseBody'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create Sales
      tags:
      - Sales
  /seats:
    get:
      parameters:
      - description: Flight origin ID
        in: query
        name: origin
        required: true
        type: integer
      - description: Flight destination ID
        in: query
        name: destination
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controller.seatResponse'
            type: array
      summary: Get Seats by Origin and Destination
      tags:
      - Seats
swagger: "2.0"
